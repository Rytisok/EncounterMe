@inject IAuthenticationService AuthService
@inject NavigationManager NavManager

@page "/Login"

<div class="row justify-content-center">
    <div class="col-md-5">
        <div class="card mt-10 mb-10">
            <div class="card-header">
                <h2>Hi there!</h2>
            </div>
            <div class="card-body">
                @if (showAuthenticationError)
                {
                    <div class="alert alert-danger" role="alert">
                        <p>@authenticationErrorText</p>
                    </div>
                }
                @if(isRegistrationSuccess)
                {
                    <div class="alert alert-success" role="alert">Login was successful</div>
                }
                <EditForm Model="@loginUserModel" OnValidSubmit="@ExecuteLogin" class="card-body bg-light mt-5" autocomplete="on">
            <DataAnnotationsValidator />
            <div class="col-md-12 mb-3">
                <label for="Username">Enter Username:</label>
                <InputText id="Username" placeholder="Username" @bind-Value="loginUserModel.UserName" class="form-control" />
                <ValidationMessage For="@(() => loginUserModel.UserName)" />
            </div>

            <div class="col-md-12 mb-3">
                <label for="Password">Enter Password:</label>
                <InputText id="Password" placeholder="Password" type="password" @bind-Value="loginUserModel.Password" class="form-control" />
                <ValidationMessage For="@(() => loginUserModel.Password)" />
            </div>

            <div class="form-group" align="left">
                <div class="col-md-12 mb-3">
                    <button type="submit" class="btn btn-primary">Log in</button>
                </div>
            </div>

        </EditForm>
            </div>
        </div>
    </div>
</div>
 


@code {

    private AuthenticationUserModel loginUserModel = new ();
    private bool isRegistrationSuccess = false;
    private bool showAuthenticationError = false;
    private string authenticationErrorText = "";
    private async Task ExecuteLogin()
    {
        isRegistrationSuccess = true;
        showAuthenticationError = false;
        AuthenticatedUserModel result = await AuthService.Login(loginUserModel);

        if(result is not null)
        {
            NavManager.NavigateTo("/");
        }
        else
        {
            authenticationErrorText = "Error while trying to log in.";
            showAuthenticationError = true;
        }

    }

}
