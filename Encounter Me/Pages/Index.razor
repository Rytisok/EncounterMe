@page "/"
@inject IJSRuntime JSRuntime
@inject HttpClient Http

<div id="mapid"></div>
<button @onclick="UpdateMarkers">
    Search for trails
</button>

@code{
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {

            await JSRuntime.InvokeAsync<string>(
            "initialize", 54.7, 25.26);
        }
        base.OnAfterRender(firstRender);
    }

    private async Task UpdateMarkers()
    {
        TrailContainer[] trails = await Http.GetFromJsonAsync<TrailContainer[]>("testTrail.json");
        foreach(TrailContainer trail in trails)
        {
            await AddMarker(trail);
        }
    }

    private async Task AddMarker(TrailContainer trail)
    {
        string difficulty = "";
        for (int i = 0; i < trail.Diff; i++)
        {
            difficulty += "★";
        }
        for (int i = 0; i < 5 - trail.Diff; i++)
        {
            difficulty += '☆';
        }

        string infoWindowContent = "<div id=content>" +
        "<p style=\"font-size:25px\"> Length: " + trail.Length + "km </p>" +
        "<p style=\"font-size:25px\"> Difficulty: " + difficulty + "</p>" +
        "</div>";

        await JSRuntime.InvokeAsync<string>(
            "addMarker", trail.Lat, trail.Lng, infoWindowContent, trail.GeoJsonData);
    }
}