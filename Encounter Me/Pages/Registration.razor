@page "/Create account"
@using Encounter_Me.Services

<div class="row justify-content-center">
    <div class="col-md-5">
        <div class="card mt-10 mb-10">
            <div class="card-header">
                <h2>User Registration</h2>
            </div>
            <div class="card-body">
                @if (isRegistrationSuccess)
                {
                    <div class="alert alert-success" role="alert">Registration was successful</div>
                }
                <EditForm Model="@registrationUserModel" OnValidSubmit="CreateNewUser" autocomplete="off">
                    <DataAnnotationsValidator />
                    <div class="col-md-12 mb-3">
                        <label for="Username">User Name</label>
                        <InputText id="Username" placeholder="Enter Username" @bind-Value="registrationUserModel.UserName" class="form-control" />
                        <ValidationMessage For="@(() => registrationUserModel.UserName)" />
                    </div>
                    <div class="col-md-12 mb-3">
                        <label for="FirstName">First Name</label>
                        <InputText id="FirstName" placeholder="Enter Name" @bind-Value="registrationUserModel.FirstName" class="form-control" />
                        <ValidationMessage For="@(() => registrationUserModel.FirstName)" />
                    </div>
                    <div class="col-md-12 mb-3">
                        <label for="LastName">Last Name</label>
                        <InputText id="LastName" placeholder="Enter Surname" @bind-Value="registrationUserModel.LastName" class="form-control" />
                        <ValidationMessage For="@(() =>  registrationUserModel.LastName)" />
                    </div>
                    <div class="col-md-12 mb-3">
                        <label for="Email">Email</label>
                        <InputText id="Email" placeholder="Enter Email" @bind-Value="registrationUserModel.Email" class="form-control" />
                        <ValidationMessage For="@(() => registrationUserModel.Email)" />
                    </div>
                    <div class="col-md-12 mb-3">
                        <label for="Password">Password</label>
                        <InputText id="Password" placeholder="Enter Password" type="password" @bind-Value="registrationUserModel.Password" class="form-control" />
                        <ValidationMessage For="@(() => registrationUserModel.Password)" />
                    </div>
                    <div class="col-md-12 mb-3">
                        <label for="Confirm password">Confirm password</label>
                        <InputText id="Confirm Password" placeholder="Repeat Password" type="password" @bind-Value="registrationUserModel.ConfirmPassword" class="form-control" />
                        <ValidationMessage For="@(() =>  registrationUserModel.ConfirmPassword)" />
                    </div>

                    <div class="form-group" align="left">
                        <div class="col-md-12 mb-3">
                            <button type="submit" class="btn btn-primary">Sign up</button>
                        </div>
                    </div>

                </EditForm>
            </div>
        </div>
    </div>
</div>

@code {

    private RegistrationUserModel registrationUserModel = new RegistrationUserModel();
    private bool isRegistrationSuccess = false;

    [Inject]
    public IUserDataService userDataService { get; set; }


    void CreateNewUser()
    {
        isRegistrationSuccess = true;
        Console.WriteLine("New user name is...");
        var hashSalt = PasswordManager.EncryptPassword(registrationUserModel.Password);
        var newUser = new UserData(
            id: 0,
            userName: registrationUserModel.UserName,
            firstName: registrationUserModel.FirstName,
            lastName: registrationUserModel.LastName,
            email: registrationUserModel.Email,
            password: hashSalt.Hash,
            salt: hashSalt.Salt);

        userDataService.AddUser(newUser);

        Console.WriteLine($"Name: {newUser.FirstName}\n" +
                          $"Surname: {newUser.LastName}\n" +
                          $"Email: {newUser.Email}\n" +
                          $"Password: {newUser.Password}\n" +
                          $"Salt: {newUser.StoredSalt}\n");
    }




}
