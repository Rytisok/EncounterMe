// <auto-generated />
using System;
using Encounter_Me.Api.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Encounter_Me.Api.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20211205180243_add_factions_to_user_data")]
    partial class add_factions_to_user_data
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Encounter_Me.UserData", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ExperiencePoints")
                        .HasColumnType("float");

                    b.Property<int?>("Faction")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Level")
                        .HasColumnType("int");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("StoredSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("UserPhotoUrl")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("TrailContainer", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Diff")
                        .HasColumnType("int");

                    b.Property<string>("GeoJsonData")
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Lat")
                        .HasColumnType("float");

                    b.Property<double>("Length")
                        .HasColumnType("float");

                    b.Property<double>("Lng")
                        .HasColumnType("float");

                    b.Property<int>("trailType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("Trails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Diff = 2,
                            GeoJsonData = "sample-data/test.geojson",
                            Lat = 54.721400000000003,
                            Length = 2.3999999999999999,
                            Lng = 25.255500000000001,
                            trailType = 0
                        },
                        new
                        {
                            Id = 2,
                            Diff = 3,
                            GeoJsonData = "sample-data/test1.geojson",
                            Lat = 54.685002361652998,
                            Length = 3.0,
                            Lng = 25.240305662154999,
                            trailType = 1
                        },
                        new
                        {
                            Id = 3,
                            Diff = 1,
                            GeoJsonData = "sample-data/test2.geojson",
                            Lat = 54.686813299999997,
                            Length = 1.3999999999999999,
                            Lng = 25.290559500000001,
                            trailType = 2
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
